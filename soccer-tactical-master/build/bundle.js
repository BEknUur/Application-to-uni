/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.tsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/index.js?modules&localIdentName=[name]__[local]-[hash:base64:5]!./node_modules/less-loader/dist/cjs.js!./src/compo/style.less":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader?modules&localIdentName=[name]__[local]-[hash:base64:5]!./node_modules/less-loader/dist/cjs.js!./src/compo/style.less ***!
  \******************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".style__panel-Fww7i {\\n  display: flex;\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  background: #616467;\\n}\\n.style__draw-block-3Qi2L {\\n  padding: 10px 0;\\n}\\n.style__draw-block-3Qi2L:hover {\\n  background: #787879;\\n}\\n.style__draw-btn-1b9rx {\\n  color: #fff;\\n  font-size: 18px;\\n  text-align: center;\\n  line-height: 2em;\\n}\\n.style__draw-btn-1b9rx:hover {\\n  color: #419adf;\\n  cursor: pointer;\\n}\\n.style__draw-btn-1b9rx.style__draw-btn-1b9rx.style__checked-12TLL:hover {\\n  color: #787879;\\n}\\n.style__draw-btn-1b9rx.style__checked-12TLL {\\n  background: #419adf;\\n}\\n.style__line-color-block-1cXqL {\\n  display: flex;\\n  justify-content: space-around;\\n  box-sizing: border-box;\\n  padding: 15px;\\n}\\n.style__line-color-block-1cXqL div {\\n  cursor: pointer;\\n  width: 15px;\\n  height: 15px;\\n  transition: transform 0.5s;\\n}\\n.style__line-color-block-1cXqL div:hover {\\n  transform: rotate(45deg);\\n  transition: transform 0.5s;\\n}\\n.style__line-color-block-1cXqL div.style__selected-3ZC4s {\\n  transform: rotate(135deg);\\n  transition: transform 0.2s;\\n}\\n.style__line-width-block-27xxc {\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n.style__line-width-btn-1kFil {\\n  padding: 5px 10px;\\n  cursor: pointer;\\n}\\n.style__line-width-btn-1kFil div {\\n  border-radius: 999px;\\n  background: #27292a;\\n  transition: transform 0.5s;\\n}\\n.style__line-width-btn-1kFil div.style__selected-3ZC4s {\\n  transform: rotateX(180deg);\\n  transition: transform 0.2s;\\n  background: #fff;\\n}\\n.style__line-width-btn-1kFil:hover div {\\n  transform: rotateY(180deg);\\n  transition: transform 0.5s;\\n}\\n.style__line-style-block-zAXRy {\\n  box-sizing: border-box;\\n  padding: 0 20px;\\n  height: 40px;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n.style__line-style-btn-1pHUC {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  cursor: pointer;\\n  width: 35%;\\n  height: 100%;\\n  transition: transform 0.2s;\\n}\\n.style__line-style-btn-1pHUC:not(.style__selected-3ZC4s):hover div {\\n  transform: rotate(15deg);\\n  transition: transform 0.5s;\\n}\\n.style__line-style-btn-1pHUC.style__selected-3ZC4s {\\n  transform: rotate(350deg);\\n  transition: transform 0.5s;\\n}\\n.style__selected-3ZC4s .style__line-normal-1tI35 {\\n  background: #fff;\\n}\\n.style__line-normal-1tI35 {\\n  height: 8px;\\n  background: #27292a;\\n}\\n.style__selected-3ZC4s .style__line-dash-2-kMH {\\n  border-bottom: 8px dashed #fff;\\n}\\n.style__line-dash-2-kMH {\\n  border-bottom: 8px dashed #27292a;\\n}\\n.style__ele-block-wYR5X {\\n  width: 100%;\\n  height: 30%;\\n  padding: 10px 10%;\\n  box-sizing: border-box;\\n  overflow: scroll;\\n  text-align: center;\\n}\\n.style__ele-block-wYR5X:hover {\\n  background: #787979;\\n}\\n.style__player-element-9XtqU {\\n  margin: 10px;\\n  display: inline-block;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n.style__player-element-9XtqU:hover {\\n  background: #419adf;\\n}\\n.style__player-element-9XtqU img {\\n  height: 100%;\\n}\\n.style__tool-bar-mM1a_ {\\n  height: 30px;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n.style__tool-box-left-1nOi8,\\n.style__tool-box-right-2VkRg {\\n  height: 100%;\\n  display: flex;\\n  background: #27292a;\\n}\\n.style__tool-item-39cYr {\\n  padding: 0 15px;\\n  height: 30px;\\n  line-height: 30px;\\n  color: #fff;\\n  text-align: center;\\n  cursor: pointer;\\n}\\n.style__tool-item-39cYr:hover {\\n  background: #57595a;\\n}\\n.style__tool-item-39cYr.style__disabled-3Nqs5 {\\n  cursor: not-allowed;\\n}\\n.style__arrow-active-9Z5Zk {\\n  color: #239336;\\n}\\n.style__ok-btn-3ONhT {\\n  position: absolute;\\n  bottom: 0;\\n  left: 50%;\\n  margin-left: -50px;\\n  display: inline-block;\\n  width: 100px;\\n  height: 30px;\\n  line-height: 30px;\\n  background: #419adf;\\n  color: #fff;\\n  text-align: center;\\n}\\n.style__ok-btn-3ONhT:hover {\\n  cursor: pointer;\\n  background: #2a6796;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"panel\": \"style__panel-Fww7i\",\n\t\"draw-block\": \"style__draw-block-3Qi2L\",\n\t\"draw-btn\": \"style__draw-btn-1b9rx\",\n\t\"checked\": \"style__checked-12TLL\",\n\t\"line-color-block\": \"style__line-color-block-1cXqL\",\n\t\"selected\": \"style__selected-3ZC4s\",\n\t\"line-width-block\": \"style__line-width-block-27xxc\",\n\t\"line-width-btn\": \"style__line-width-btn-1kFil\",\n\t\"line-style-block\": \"style__line-style-block-zAXRy\",\n\t\"line-style-btn\": \"style__line-style-btn-1pHUC\",\n\t\"line-normal\": \"style__line-normal-1tI35\",\n\t\"line-dash\": \"style__line-dash-2-kMH\",\n\t\"ele-block\": \"style__ele-block-wYR5X\",\n\t\"player-element\": \"style__player-element-9XtqU\",\n\t\"tool-bar\": \"style__tool-bar-mM1a_\",\n\t\"tool-box-left\": \"style__tool-box-left-1nOi8\",\n\t\"tool-box-right\": \"style__tool-box-right-2VkRg\",\n\t\"tool-item\": \"style__tool-item-39cYr\",\n\t\"disabled\": \"style__disabled-3Nqs5\",\n\t\"arrow-active\": \"style__arrow-active-9Z5Zk\",\n\t\"ok-btn\": \"style__ok-btn-3ONhT\"\n};\n\n//# sourceURL=webpack:///./src/compo/style.less?./node_modules/css-loader?modules&localIdentName=%5Bname%5D__%5Blocal%5D-%5Bhash:base64:5%5D!./node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack:///./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/compo/data.ts":
/*!***************************!*\
  !*** ./src/compo/data.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Modes;\n(function (Modes) {\n    Modes[Modes[\"normal\"] = 1] = \"normal\";\n    Modes[Modes[\"imageAdding\"] = 2] = \"imageAdding\";\n    Modes[Modes[\"imageSelected\"] = 3] = \"imageSelected\";\n    Modes[Modes[\"freeDrawing\"] = 4] = \"freeDrawing\";\n    Modes[Modes[\"freeDrawSelected\"] = 5] = \"freeDrawSelected\";\n    Modes[Modes[\"freeLining\"] = 6] = \"freeLining\";\n    Modes[Modes[\"freeLineSelected\"] = 7] = \"freeLineSelected\";\n    Modes[Modes[\"adjustFreeLine\"] = 8] = \"adjustFreeLine\";\n    Modes[Modes[\"groupSelected\"] = 9] = \"groupSelected\";\n    Modes[Modes[\"addText\"] = 10] = \"addText\";\n    Modes[Modes[\"textSelected\"] = 11] = \"textSelected\";\n})(Modes = exports.Modes || (exports.Modes = {}));\nvar TType;\n(function (TType) {\n    TType[TType[\"ground\"] = 0] = \"ground\";\n    TType[TType[\"image\"] = 1] = \"image\";\n    TType[TType[\"freeDraw\"] = 2] = \"freeDraw\";\n    TType[TType[\"freeLine\"] = 3] = \"freeLine\";\n    TType[TType[\"freeLineArrow\"] = 4] = \"freeLineArrow\";\n    TType[TType[\"text\"] = 5] = \"text\";\n})(TType = exports.TType || (exports.TType = {}));\nexports.TTypeSelectable = {\n    [TType.ground]: false,\n    [TType.image]: true,\n    [TType.freeDraw]: true,\n    [TType.freeLine]: true,\n    [TType.freeLineArrow]: false,\n    [TType.text]: true\n};\nexports.BgColor = '#279e3d';\nvar Colors;\n(function (Colors) {\n    Colors[\"black\"] = \"#232526\";\n    Colors[\"red\"] = \"#cc1c23\";\n    Colors[\"blue\"] = \"#0d75c5\";\n    Colors[\"yellow\"] = \"#eebc12\";\n})(Colors = exports.Colors || (exports.Colors = {}));\nvar LineStyle;\n(function (LineStyle) {\n    LineStyle[LineStyle[\"normal\"] = 1] = \"normal\";\n    LineStyle[LineStyle[\"dash\"] = 2] = \"dash\";\n})(LineStyle = exports.LineStyle || (exports.LineStyle = {}));\nvar LineWidth;\n(function (LineWidth) {\n    LineWidth[LineWidth[\"sm\"] = 1] = \"sm\";\n    LineWidth[LineWidth[\"md\"] = 3] = \"md\";\n    LineWidth[LineWidth[\"lg\"] = 5] = \"lg\";\n})(LineWidth = exports.LineWidth || (exports.LineWidth = {}));\n\n\n//# sourceURL=webpack:///./src/compo/data.ts?");

/***/ }),

/***/ "./src/compo/element/freeDraw.ts":
/*!***************************************!*\
  !*** ./src/compo/element/freeDraw.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author: zenggo\n * @Date: 2018-04-27 10:37:41\n * @Last Modified by: zenggo\n * @Last Modified time: 2018-05-02 18:16:08\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = __webpack_require__(/*! ../data */ \"./src/compo/data.ts\");\nconst fabric = __webpack_require__(/*! fabric */ \"fabric\");\nconst sizeManager_1 = __webpack_require__(/*! ../sizeManager */ \"./src/compo/sizeManager.ts\");\nconst fabricHelper_1 = __webpack_require__(/*! ../fabricHelper */ \"./src/compo/fabricHelper.ts\");\nclass FreeDraw {\n    constructor(canvas, target) {\n        this.canvas = canvas;\n        this.host = target;\n        this.created = true;\n    }\n    remove() {\n        this.canvas.remove(this.host);\n    }\n    static recreate(target) {\n        target._tElement = new FreeDraw(target.canvas, target);\n    }\n    static create(target) {\n        target._tType = data_1.TType.freeDraw;\n        target._tElement = new FreeDraw(target.canvas, target);\n        return target._tElement;\n    }\n    static start(canvas, wrapWidth, color, width, style) {\n        fabricHelper_1.default.disableAllSelect(canvas);\n        canvas.isDrawingMode = true;\n        canvas.freeDrawingBrush.color = color;\n        canvas.freeDrawingBrush.width = sizeManager_1.default.getRealLineWidth(width, wrapWidth);\n        canvas.freeDrawingBrush.strokeDashArray = (style == data_1.LineStyle.normal) ? null : sizeManager_1.default.getStrokeDashArray(width);\n        canvas.on('object:added', FreeDraw.onAdded);\n    }\n    static end(canvas) {\n        canvas.isDrawingMode = false;\n        canvas.off('object:added', FreeDraw.onAdded);\n        fabricHelper_1.default.enableAllSelect(canvas);\n    }\n    static onAdded(options) {\n        let target = options.target;\n        if (!target._tType && target.type == 'path') { // 防止sink时、redo、undo时重复触发\n            let element = FreeDraw.create(target);\n            FreeDraw.sink(element);\n            element.canvas._onFreeDrawAdded && element.canvas._onFreeDrawAdded();\n        }\n    }\n    static setColor(canvas, color) {\n        canvas.freeDrawingBrush.color = color;\n    }\n    static changeColor(target, color) {\n        target.set({ stroke: color });\n        target.canvas.renderAll();\n    }\n    static setStyle(canvas, style, width) {\n        canvas.freeDrawingBrush.strokeDashArray = style == data_1.LineStyle.normal ? null : sizeManager_1.default.getStrokeDashArray(width);\n    }\n    static changeStyle(target, style, wrapWidth) {\n        let lineWidth = sizeManager_1.default.getLineWidth(target.strokeWidth, wrapWidth);\n        target.set({\n            strokeDashArray: style == data_1.LineStyle.normal ? null : sizeManager_1.default.getStrokeDashArray(lineWidth)\n        });\n        target.canvas.renderAll();\n    }\n    static setWidth(canvas, wrapWidth, width, style) {\n        canvas.freeDrawingBrush.width = sizeManager_1.default.getRealLineWidth(width, wrapWidth);\n        // 同时切lineStyle\n        canvas.freeDrawingBrush.strokeDashArray = style == data_1.LineStyle.normal ? null : sizeManager_1.default.getStrokeDashArray(width);\n    }\n    static changeWidth(target, wrapWidth, width) {\n        target.set({\n            strokeWidth: sizeManager_1.default.getRealLineWidth(width, wrapWidth),\n            strokeDashArray: target.strokeDashArray ? sizeManager_1.default.getStrokeDashArray(width) : null\n        });\n        target.canvas.renderAll();\n    }\n    static sink(target) {\n        let { canvas, host } = target;\n        let firstImgObjIdx = canvas._objects.findIndex(obj => {\n            return obj._tType == data_1.TType.image || obj._tType == data_1.TType.text;\n        });\n        canvas.remove(host);\n        canvas.insertAt(host, firstImgObjIdx);\n        canvas.renderAll();\n    }\n}\nexports.default = FreeDraw;\n\n\n//# sourceURL=webpack:///./src/compo/element/freeDraw.ts?");

/***/ }),

/***/ "./src/compo/element/freeLine.ts":
/*!***************************************!*\
  !*** ./src/compo/element/freeLine.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author: zenggo\n * @Date: 2018-04-27 13:57:17\n * @Last Modified by: zenggo\n * @Last Modified time: 2018-05-02 18:20:58\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = __webpack_require__(/*! ../data */ \"./src/compo/data.ts\");\nconst fabric = __webpack_require__(/*! fabric */ \"fabric\");\nconst sizeManager_1 = __webpack_require__(/*! ../sizeManager */ \"./src/compo/sizeManager.ts\");\nconst fabricHelper_1 = __webpack_require__(/*! ../fabricHelper */ \"./src/compo/fabricHelper.ts\");\nclass FreeLine {\n    constructor(canvas, wrapWidth, color, lineStyle, lineWidth) {\n        this.drawHandler = this.drawHandler.bind(this);\n        this.onMoveAnchor = this.onMoveAnchor.bind(this);\n        this.onMoveLine = this.onMoveLine.bind(this);\n        this.canvas = canvas;\n        this.color = color;\n        this.lineWidth = sizeManager_1.default.getRealLineWidth(lineWidth, wrapWidth);\n        this.strokeDashArray = lineStyle == data_1.LineStyle.dash ? sizeManager_1.default.getStrokeDashArray(lineWidth) : null;\n        this.start();\n    }\n    static recreate(target) {\n        let t = {\n            canvas: target.canvas,\n            host: target,\n            created: true,\n            color: target.stroke,\n            lineWidth: target.strokeWidth,\n            strokeDashArray: target.strokeDashArray,\n            _points: target.points.map(p => ({ x: p.x, y: p.y }))\n        };\n        t.constructor = FreeLine;\n        Object.setPrototypeOf(t, FreeLine.prototype);\n        t.drawHandler = t.drawHandler.bind(t);\n        t.onMoveAnchor = t.onMoveAnchor.bind(t);\n        t.onMoveLine = t.onMoveLine.bind(t);\n        target._tElement = t;\n        // 重建左右箭头\n        target._tHasLeftArrow && t.addLeftArrow();\n        target._tHasRightArrow && t.addRightArrow();\n        // on move bind\n        target.on('moving', t.onMoveLine);\n    }\n    remove() {\n        let { canvas, host, _leftArrow, _rightArrow } = this;\n        canvas.remove(host);\n        _leftArrow && canvas.remove(_leftArrow);\n        _rightArrow && canvas.remove(_rightArrow);\n    }\n    start() {\n        this._points = [];\n        this._temp = [];\n        fabricHelper_1.default.disableAllSelect(this.canvas);\n        this.canvas.on('mouse:down', this.drawHandler);\n    }\n    end() {\n        if (this.created)\n            return;\n        this.canvas.off('mouse:down', this.drawHandler);\n        this._points.length > 1 && this.drawLine();\n        this.created = true;\n        this._temp.forEach(t => this.canvas.remove(t));\n        this._temp = [];\n        fabricHelper_1.default.enableAllSelect(this.canvas);\n    }\n    drawHandler(options) {\n        let { canvas, color, lineWidth, strokeDashArray, _points, _temp } = this;\n        let { layerX, layerY } = options.e;\n        let obj;\n        if (_points.length) {\n            let lastPoint = _points[_points.length - 1];\n            obj = new fabric.Line([lastPoint.x, lastPoint.y, layerX, layerY], {\n                stroke: color, strokeWidth: lineWidth, strokeDashArray,\n                selectable: false, hoverCursor: 'default'\n            });\n        }\n        else { // 第一点\n            obj = new fabric.Circle({\n                left: layerX - lineWidth, top: layerY - lineWidth,\n                radius: lineWidth, fill: color,\n                selectable: false, hoverCursor: 'default'\n            });\n        }\n        _temp.push(obj);\n        canvas.add(obj);\n        canvas.renderAll();\n        _points.push({ x: layerX, y: layerY });\n    }\n    drawLine(insertIdx) {\n        let { canvas, color, lineWidth, strokeDashArray, _points } = this;\n        let line = new fabric.Polyline(_points, {\n            fill: null,\n            stroke: color,\n            strokeDashArray,\n            strokeWidth: lineWidth\n        });\n        line._tType = data_1.TType.freeLine;\n        line._tOriLeft = line.left;\n        line._tOriTop = line.top;\n        line._tElement = this;\n        this.host = line;\n        // render\n        insertIdx = insertIdx || canvas._objects.findIndex(obj => {\n            return obj._tType == data_1.TType.image || obj._tType == data_1.TType.text;\n        }); // 没有insertIdx就sink在图片的下面\n        canvas.insertAt(line, insertIdx);\n        canvas.renderAll();\n        line.on('moving', this.onMoveLine);\n    }\n    startAdjust() {\n        this.created = false;\n        let _temp = this._temp = [];\n        let line = this.host;\n        let { scaleX, scaleY } = line;\n        let { canvas, _points, lineWidth, strokeDashArray } = this;\n        fabricHelper_1.default.disableAllSelect(canvas);\n        // 移除原来的polyline\n        line._idx = canvas._objects.indexOf(line); // 记录原来的_objects位置\n        canvas.remove(line);\n        // 移除左右箭头\n        this._leftArrow && canvas.remove(this._leftArrow);\n        this._rightArrow && canvas.remove(this._rightArrow);\n        // 原始节点经过scale与move映射为当前的节点\n        let newPoints = _points.map(p => FreeLine.getRealCoorOfPoint(p, line));\n        // 把polyline线变为圆锚点与线段\n        for (let i = 0; i < newPoints.length; i++) {\n            let p = newPoints[i];\n            let _anchor = new fabric.Circle({\n                left: p.x - 8, top: p.y - 8,\n                radius: 8, fill: this.color,\n                hasControls: false\n            });\n            _temp.push(_anchor);\n            if (i < newPoints.length - 1) {\n                let _line = new fabric.Line([newPoints[i].x, newPoints[i].y, newPoints[i + 1].x, newPoints[i + 1].y], {\n                    stroke: this.color, strokeWidth: lineWidth, strokeDashArray,\n                    selectable: false, hoverCursor: 'default'\n                });\n                _temp.push(_line);\n            }\n        }\n        let _anchors = _temp.filter(obj => obj.get('type') == 'circle'), _lines = _temp.filter(obj => obj.get('type') == 'line');\n        canvas.add(..._lines, ..._anchors);\n        canvas.renderAll();\n        canvas.on('object:moving', this.onMoveAnchor);\n    }\n    onMoveAnchor(e) {\n        let { _temp, canvas } = this;\n        let target = e.target;\n        let anchorIdx = _temp.findIndex(t => t === target);\n        _temp[anchorIdx - 1] && _temp[anchorIdx - 1].set({ x2: target.left + 8, y2: target.top + 8 });\n        _temp[anchorIdx + 1] && _temp[anchorIdx + 1].set({ x1: target.left + 8, y1: target.top + 8 });\n        canvas.renderAll();\n    }\n    endAdjust() {\n        if (this.created)\n            return;\n        let { canvas, _temp } = this;\n        let anchors = _temp.filter(t => t.get('type') == 'circle');\n        let originLine = this.host;\n        canvas.off('mouse:down', this.onMoveAnchor);\n        let points = this._points = [];\n        for (let anchor of anchors) {\n            points.push({\n                x: anchor.left + 8,\n                y: anchor.top + 8\n            });\n        }\n        _temp.forEach(t => canvas.remove(t));\n        this.drawLine(originLine._idx);\n        this._temp = [];\n        this.created = true;\n        // 左右箭头\n        this._leftArrow && this.addLeftArrow();\n        this._rightArrow && this.addRightArrow();\n        fabricHelper_1.default.enableAllSelect(canvas);\n    }\n    addLeftArrow() {\n        let line = this.host;\n        let firstPoint = FreeLine.getRealCoorOfPoint(line.points[0], line), secondPoint = FreeLine.getRealCoorOfPoint(line.points[1], line);\n        this._leftArrow = FreeLine.createArrow(this.canvas, line, firstPoint, secondPoint);\n        line._tHasLeftArrow = true;\n    }\n    removeLeftArrow() {\n        if (!this._leftArrow)\n            return;\n        this.canvas.remove(this._leftArrow);\n        this._leftArrow = null;\n        this.host._tHasLeftArrow = false;\n        this.canvas.renderAll();\n    }\n    addRightArrow() {\n        let line = this.host;\n        let lastPoint = FreeLine.getRealCoorOfPoint(line.points[line.points.length - 1], line), last2Point = FreeLine.getRealCoorOfPoint(line.points[line.points.length - 2], line);\n        this._rightArrow = FreeLine.createArrow(this.canvas, line, lastPoint, last2Point);\n        line._tHasRightArrow = true;\n    }\n    removeRightArrow() {\n        if (!this._rightArrow)\n            return;\n        this.canvas.remove(this._rightArrow);\n        this._rightArrow = null;\n        this.host._tHasRightArrow = false;\n        this.canvas.renderAll();\n    }\n    onMoveLine() {\n        let { canvas, _leftArrow, _rightArrow } = this;\n        if (_leftArrow) {\n            canvas.remove(_leftArrow);\n            this.addLeftArrow();\n        }\n        if (_rightArrow) {\n            canvas.remove(_rightArrow);\n            this.addRightArrow();\n        }\n    }\n    static createArrow(canvas, line, point1, point2) {\n        let idx = canvas._objects.indexOf(line);\n        let a = point1.x - point2.x, b = point2.y - point1.y, angle;\n        // 分象限 计算与垂直方向的夹角\n        if (a >= 0 && b > 0) {\n            angle = Math.atan(a / b) / Math.PI * 180;\n        }\n        else if (a > 0 && b <= 0) {\n            angle = 90 + Math.atan(-b / a) / Math.PI * 180;\n        }\n        else if (a <= 0 && b < 0) {\n            angle = 180 + Math.atan(-a / -b) / Math.PI * 180;\n        }\n        else {\n            angle = 360 - Math.atan(-a / b) / Math.PI * 180;\n        }\n        // 等腰三角形大小\n        let size = Math.max(10, line.strokeWidth * 10 / 2);\n        // 三角形中心与point1的偏移量，将中心向左上方移动至点上，要把lineWidth考虑在内\n        let offset = size / 2 - (line.strokeWidth * Math.cos((+angle % 90) / 180 * Math.PI)) / 2;\n        let arrow = new fabric.Triangle({\n            left: point1.x - offset,\n            top: point1.y - offset,\n            width: size, height: size,\n            fill: line.stroke,\n            selectable: false, hoverCursor: 'default', excludeFromExport: true\n        });\n        arrow.rotate(angle);\n        arrow._tType = data_1.TType.freeLineArrow;\n        canvas.insertAt(arrow, idx);\n        canvas.renderAll();\n        return arrow;\n    }\n    static getRealCoorOfPoint(point, line) {\n        // 原始坐标按当前缩放比例缩放\n        let movementX = line.left - line._tOriLeft * line.scaleX;\n        let movementY = line.top - line._tOriTop * line.scaleY;\n        return {\n            x: point.x * line.scaleX + movementX,\n            y: point.y * line.scaleY + movementY\n        };\n    }\n    static changeColor(target, color) {\n        if (target._tType == data_1.TType.freeLine && target._tElement && target._tElement.created) {\n            let tElement = target._tElement;\n            tElement.color = color;\n            target.set({ stroke: color });\n            tElement._leftArrow && tElement._leftArrow.set({ fill: color });\n            tElement._rightArrow && tElement._rightArrow.set({ fill: color });\n            tElement.canvas.renderAll();\n        }\n    }\n    static changeStyle(target, style, wrapWidth) {\n        if (target._tType == data_1.TType.freeLine && target._tElement && target._tElement.created) {\n            let tElement = target._tElement;\n            let lineWidth = sizeManager_1.default.getLineWidth(target.strokeWidth, wrapWidth);\n            tElement.strokeDashArray = style == data_1.LineStyle.dash ? sizeManager_1.default.getStrokeDashArray(lineWidth) : null;\n            target.set({ strokeDashArray: tElement.strokeDashArray });\n            tElement.canvas.renderAll();\n        }\n    }\n    static changeWidth(target, wrapWidth, width) {\n        if (target._tType == data_1.TType.freeLine && target._tElement && target._tElement.created) {\n            let tElement = target._tElement;\n            tElement.strokeDashArray = tElement.strokeDashArray ? sizeManager_1.default.getStrokeDashArray(width) : null;\n            tElement.lineWidth = sizeManager_1.default.getRealLineWidth(width, wrapWidth);\n            target.set({\n                strokeWidth: tElement.lineWidth,\n                strokeDashArray: tElement.strokeDashArray\n            });\n            if (tElement._leftArrow) {\n                tElement.canvas.remove(tElement._leftArrow);\n                tElement.addLeftArrow();\n            }\n            if (tElement._rightArrow) {\n                tElement.canvas.remove(tElement._rightArrow);\n                tElement.addRightArrow();\n            }\n            tElement.canvas.renderAll();\n        }\n    }\n}\nexports.default = FreeLine;\n\n\n//# sourceURL=webpack:///./src/compo/element/freeLine.ts?");

/***/ }),

/***/ "./src/compo/element/image.ts":
/*!************************************!*\
  !*** ./src/compo/element/image.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author: zenggo\n * @Date: 2018-04-26 20:29:43\n * @Last Modified by: zenggo\n * @Last Modified time: 2018-04-28 16:11:06\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = __webpack_require__(/*! ../data */ \"./src/compo/data.ts\");\nconst fabric = __webpack_require__(/*! fabric */ \"fabric\");\nclass Image {\n    constructor(canvas, e) {\n        this.canvas = canvas;\n        this.start(e);\n    }\n    static recreate(target) {\n        let t = {\n            canvas: target.canvas,\n            host: target,\n            created: true\n        };\n        t.constructor = Image;\n        Object.setPrototypeOf(t, Image.prototype);\n        target._tElement = t;\n    }\n    remove() {\n        this.canvas.remove(this.host);\n    }\n    start(e) {\n        if (this.created)\n            return;\n        this._element = {\n            offsetX: e.offsetX,\n            offsetY: e.offsetY,\n            node: e.target\n        };\n    }\n    end(options, cb) {\n        if (this.created)\n            return;\n        let { _element, canvas } = this;\n        let { layerX, layerY } = options.e;\n        let left = layerX - (_element.offsetX || 0), top = layerY - (_element.offsetY || 0);\n        fabric.Image.fromURL(_element.node.src, (img) => {\n            img.set({ left, top });\n            img.scaleToWidth(_element.node.width);\n            img.scaleToHeight(_element.node.height);\n            canvas.add(img);\n            canvas.renderAll();\n            img._tType = data_1.TType.image;\n            img._tElement = this;\n            this.host = img;\n            this.created = true;\n            cb && cb(this);\n        });\n    }\n}\nexports.default = Image;\n\n\n//# sourceURL=webpack:///./src/compo/element/image.ts?");

/***/ }),

/***/ "./src/compo/element/text.ts":
/*!***********************************!*\
  !*** ./src/compo/element/text.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author: zenggo\n * @Date: 2018-05-02 13:57:13\n * @Last Modified by: zenggo\n * @Last Modified time: 2018-05-02 18:00:22\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = __webpack_require__(/*! ../data */ \"./src/compo/data.ts\");\nconst fabric = __webpack_require__(/*! fabric */ \"fabric\");\nconst fabricHelper_1 = __webpack_require__(/*! ../fabricHelper */ \"./src/compo/fabricHelper.ts\");\nclass Text {\n    constructor(canvas, color) {\n        this.canvas = canvas;\n        this.color = color;\n        this.add = this.add.bind(this);\n        this.endEdit = this.endEdit.bind(this);\n        this.start();\n    }\n    static recreate(target) {\n        let t = {\n            canvas: target.canvas,\n            host: target,\n            created: true\n        };\n        t.constructor = Text;\n        Object.setPrototypeOf(t, Text.prototype);\n        t.add = t.add.bind(t);\n        t.endEdit = t.endEdit.bind(t);\n        target._tElement = t;\n    }\n    remove() {\n        this.canvas.remove(this.host);\n    }\n    start() {\n        fabricHelper_1.default.disableAllSelect(this.canvas);\n        this.canvas.on('mouse:down', this.add);\n    }\n    end() {\n        if (this.created)\n            return;\n        this.canvas.off('mouse:down', this.add);\n        this.created = true;\n    }\n    add(options) {\n        let { canvas } = this;\n        let { offsetX, offsetY } = options.e;\n        let text = new fabric.IText(\"\", {\n            left: offsetX, top: offsetY,\n            fontSize: 20, fill: this.color\n        });\n        canvas.add(text);\n        text._tElement = this;\n        text._tType = data_1.TType.text;\n        this.host = text;\n        this.end();\n        canvas.setActiveObject(text);\n        text.enterEditing();\n        fabricHelper_1.default.enableAllSelect(this.canvas);\n        canvas.renderAll();\n    }\n    startEdit() {\n        this.canvas.on('selection:cleared', this.endEdit);\n        this.canvas.on('selection:updated', this.endEdit);\n    }\n    endEdit() {\n        if (this.host && !this.host.text) {\n            this.remove();\n        }\n        this.canvas.off('selection:cleared', this.endEdit);\n        this.canvas.off('selection:updated', this.endEdit);\n    }\n    static setColor(target, color) {\n        if (target && target instanceof Text) {\n            target.color = color;\n        }\n    }\n    static changeColor(target, color) {\n        if (target && target._tType == data_1.TType.text) {\n            let t = target._tElement;\n            t.color = color;\n            t.host && t.host.set({ fill: color });\n            target.canvas.renderAll();\n        }\n    }\n}\nexports.default = Text;\n\n\n//# sourceURL=webpack:///./src/compo/element/text.ts?");

/***/ }),

/***/ "./src/compo/fabricHelper.ts":
/*!***********************************!*\
  !*** ./src/compo/fabricHelper.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author: zenggo\n * @Date: 2018-04-26 16:56:51\n * @Last Modified by: zenggo\n * @Last Modified time: 2018-05-02 16:12:46\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fabric = __webpack_require__(/*! fabric */ \"fabric\");\nconst data_1 = __webpack_require__(/*! ./data */ \"./src/compo/data.ts\");\nconst image_1 = __webpack_require__(/*! ./element/image */ \"./src/compo/element/image.ts\");\nconst freeDraw_1 = __webpack_require__(/*! ./element/freeDraw */ \"./src/compo/element/freeDraw.ts\");\nconst freeLine_1 = __webpack_require__(/*! ./element/freeLine */ \"./src/compo/element/freeLine.ts\");\nconst text_1 = __webpack_require__(/*! ./element/text */ \"./src/compo/element/text.ts\");\nconst attrNeedExport = [\n    'selectable',\n    'hoverCursor',\n    'excludeFromExport',\n    '_tType',\n    '_tOriLeft',\n    '_tOriTop',\n    '_tHasLeftArrow',\n    '_tHasRightArrow'\n];\nclass FabricHelper {\n    static createCanvas(sizes) {\n        let canvas = new fabric.Canvas('canvas', {\n            selectionColor: 'rgba(22,22,22,0.2)',\n            selectionLineWidth: sizes.SELECTION_LINE_WIDTH\n        });\n        // 选择框颜色\n        fabric.Object.prototype.borderColor = 'rgb(251,184,2)';\n        fabric.Object.prototype.cornerColor = 'rgb(251,184,2)';\n        // 选中元素时不提升到顶部\n        canvas.preserveObjectStacking = true;\n        return canvas;\n    }\n    static createTInfo(canvas, wrapWidth) {\n        return {\n            wrapWidth,\n            tObjects: FabricHelper.fabricCanvas2Obj(canvas).objects\n        };\n    }\n    static fabricCanvas2Obj(canvas) {\n        return canvas.toObject(attrNeedExport);\n    }\n    static fabricObject2Obj(object) {\n        return object.toObject(attrNeedExport);\n    }\n    static createFabricCanvasObject(groundObjs, objects) {\n        return {\n            background: data_1.BgColor,\n            objects: groundObjs.concat(objects || [])\n        };\n    }\n    static recreateTElements(objects) {\n        let _objs = [].concat(objects); // 因为recreate会修改canvas._objects(objects)，所以循环不能用objects\n        _objs.forEach(obj => {\n            switch (obj._tType) {\n                case data_1.TType.image:\n                    image_1.default.recreate(obj);\n                    break;\n                case data_1.TType.freeDraw:\n                    freeDraw_1.default.recreate(obj);\n                    break;\n                case data_1.TType.freeLine:\n                    freeLine_1.default.recreate(obj);\n                    break;\n                case data_1.TType.text:\n                    text_1.default.recreate(obj);\n                    break;\n            }\n        });\n    }\n    static deselectAll(canvas) {\n        canvas.discardActiveObject();\n        canvas.renderAll();\n    }\n    static disableAllSelect(canvas) {\n        canvas.selection = false;\n        canvas._objects.forEach((obj, idx) => {\n            obj.selectable = false;\n            obj.hoverCursor = 'default';\n        });\n        canvas.renderAll();\n    }\n    static enableAllSelect(canvas) {\n        canvas.selection = true;\n        canvas._objects.forEach((obj, idx) => {\n            let { _tType } = obj;\n            if (data_1.TTypeSelectable[_tType]) {\n                obj.selectable = true;\n                obj.hoverCursor = 'move';\n            }\n        });\n        canvas.renderAll();\n    }\n    static bringUpSelected(canvas) {\n        let selected = canvas.getActiveObject();\n        canvas.bringForward(selected, true);\n    }\n    static sendBackwardSelected(canvas) {\n        let selected = canvas.getActiveObject();\n        let objs = selected.get('type') === 'activeSelection' ? selected._objects : [selected];\n        let lowestIdx = Math.min(...objs.map(o => canvas._objects.indexOf(o)));\n        if (canvas.item(lowestIdx - 1)._tType !== data_1.TType.ground) {\n            canvas.sendBackwards(selected, true);\n        }\n    }\n    static deleteSelected(canvas) {\n        let selected = canvas.getActiveObject();\n        let objs = selected.get('type') === 'activeSelection' ? selected._objects : [selected];\n        canvas.discardActiveObject();\n        objs.forEach(o => o._tElement.remove());\n    }\n    static copySelected(canvas, S) {\n        let selected = canvas.getActiveObject();\n        return new Promise(resolve => {\n            selected.clone(cloned => {\n                cloned.set({\n                    left: cloned.left + S.COPY_OFFSET,\n                    top: cloned.top + S.COPY_OFFSET,\n                    evented: true\n                });\n                if (cloned.get('type') === 'activeSelection') {\n                    cloned._objects.forEach((obj, idx) => {\n                        obj._tType = selected._objects[idx]._tType;\n                        canvas.add(obj);\n                    });\n                    FabricHelper.recreateTElements(cloned._objects);\n                }\n                else {\n                    cloned._tType = selected._tType;\n                    canvas.insertAt(cloned, canvas._objects.indexOf(selected));\n                    FabricHelper.recreateTElements([cloned]);\n                }\n                canvas.setActiveObject(cloned);\n                canvas.renderAll();\n                resolve(cloned);\n            });\n        });\n    }\n}\nexports.default = FabricHelper;\n\n\n//# sourceURL=webpack:///./src/compo/fabricHelper.ts?");

/***/ }),

/***/ "./src/compo/groundManager.ts":
/*!************************************!*\
  !*** ./src/compo/groundManager.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fabric = __webpack_require__(/*! fabric */ \"fabric\");\nconst fabricHelper_1 = __webpack_require__(/*! ./fabricHelper */ \"./src/compo/fabricHelper.ts\");\nconst data_1 = __webpack_require__(/*! ./data */ \"./src/compo/data.ts\");\nclass GroundManager {\n    // 绘制球场\n    static getGroundObjects(sizes) {\n        let objs = [];\n        let S = sizes;\n        let common = {\n            _tType: data_1.TType.ground,\n            selectable: false, hoverCursor: 'default', excludeFromExport: true\n        };\n        // 明暗分界\n        for (let i = 0, wid = S.GROUND_WIDTH / 20; i < 10; i++) {\n            objs.push(new fabric.Rect(Object.assign({ top: S.GROUND_OFFSET, left: S.GROUND_OFFSET + i * 2 * wid, width: wid, height: S.GROUND_HEIGHT, fill: '#32ac40' }, common)));\n        }\n        // 四边线\n        objs.push(new fabric.Rect(Object.assign({ top: S.GROUND_OFFSET, left: S.GROUND_OFFSET, width: S.GROUND_WIDTH, height: S.GROUND_HEIGHT, stroke: '#fff', strokeWidth: S.GROUND_LINE_WID, fill: null }, common)));\n        // 中线\n        objs.push(new fabric.Line([\n            S.GROUND_OFFSET + S.GROUND_WIDTH / 2, S.GROUND_OFFSET,\n            S.GROUND_OFFSET + S.GROUND_WIDTH / 2, S.GROUND_OFFSET + S.GROUND_HEIGHT\n        ], Object.assign({ stroke: '#fff', strokeWidth: S.GROUND_LINE_WID }, common)));\n        // 中圈\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET + S.GROUND_WIDTH / 2 - S.GROUND_CEN_RADIUS, top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_CEN_RADIUS, strokeWidth: S.GROUND_LINE_WID, radius: S.GROUND_CEN_RADIUS, fill: null, stroke: '#fff' }, common)));\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET + S.GROUND_WIDTH / 2 - S.GROUND_CEN_DOT_RADIUS, top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_CEN_DOT_RADIUS, radius: S.GROUND_CEN_DOT_RADIUS, fill: '#fff' }, common)));\n        // 大禁区\n        objs.push(new fabric.Rect(Object.assign({ top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_BIG_BOX_HEI / 2, left: S.GROUND_OFFSET, width: S.GROUND_BIG_BOX_WID, height: S.GROUND_BIG_BOX_HEI, stroke: '#fff', strokeWidth: S.GROUND_LINE_WID, fill: null }, common)));\n        objs.push(new fabric.Rect(Object.assign({ top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_BIG_BOX_HEI / 2, left: S.GROUND_OFFSET + S.GROUND_WIDTH - S.GROUND_BIG_BOX_WID, width: S.GROUND_BIG_BOX_WID, height: S.GROUND_BIG_BOX_HEI, stroke: '#fff', strokeWidth: S.GROUND_LINE_WID, fill: null }, common)));\n        // 小禁区\n        objs.push(new fabric.Rect(Object.assign({ top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_SM_BOX_HEI / 2, left: S.GROUND_OFFSET, width: S.GROUND_SM_BOX_WID, height: S.GROUND_SM_BOX_HEI, stroke: '#fff', strokeWidth: S.GROUND_LINE_WID, fill: null }, common)));\n        objs.push(new fabric.Rect(Object.assign({ top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_SM_BOX_HEI / 2, left: S.GROUND_OFFSET + S.GROUND_WIDTH - S.GROUND_SM_BOX_WID, width: S.GROUND_SM_BOX_WID, height: S.GROUND_SM_BOX_HEI, stroke: '#fff', strokeWidth: S.GROUND_LINE_WID, fill: null }, common)));\n        // 点球点\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET + S.GROUND_PENALTY_LEN - S.GROUND_PENALTY_RADIUS, top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_PENALTY_RADIUS, radius: S.GROUND_PENALTY_RADIUS, fill: '#fff' }, common)));\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET + S.GROUND_WIDTH - S.GROUND_PENALTY_LEN - S.GROUND_PENALTY_RADIUS, top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_PENALTY_RADIUS, radius: S.GROUND_PENALTY_RADIUS, fill: '#fff' }, common)));\n        // 弧顶\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET + S.GROUND_BIG_BOX_WID - S.GROUND_BOX_ARC_RADIUS - (S.GROUND_BOX_ARC_RADIUS - S.GROUND_BOX_ARC_RADIUS * Math.cos(Math.PI / 3)), top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_BOX_ARC_RADIUS, startAngle: -Math.PI / 3, endAngle: Math.PI / 3, strokeWidth: S.GROUND_LINE_WID, radius: S.GROUND_BOX_ARC_RADIUS, fill: null, stroke: '#fff' }, common)));\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET + S.GROUND_WIDTH - S.GROUND_BIG_BOX_WID - (S.GROUND_BOX_ARC_RADIUS - S.GROUND_BOX_ARC_RADIUS * Math.cos(Math.PI / 3)), top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_BOX_ARC_RADIUS, startAngle: 2 * Math.PI / 3, endAngle: -2 * Math.PI / 3, strokeWidth: S.GROUND_LINE_WID, radius: S.GROUND_BOX_ARC_RADIUS, fill: null, stroke: '#fff' }, common)));\n        // 球门\n        objs.push(new fabric.Rect(Object.assign({ top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_GOAL_HEI / 2, left: S.GROUND_OFFSET - S.GROUND_GOAL_WID, width: S.GROUND_GOAL_WID, height: S.GROUND_GOAL_HEI, stroke: '#fff', strokeWidth: S.GROUND_LINE_WID, fill: null }, common)));\n        objs.push(new fabric.Rect(Object.assign({ top: S.GROUND_OFFSET + S.GROUND_HEIGHT / 2 - S.GROUND_GOAL_HEI / 2, left: S.GROUND_OFFSET + S.GROUND_WIDTH, width: S.GROUND_GOAL_WID, height: S.GROUND_GOAL_HEI, stroke: '#fff', strokeWidth: S.GROUND_LINE_WID, fill: null }, common)));\n        // 角旗区\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET - S.GROUND_CORNER_RADIUS, top: S.GROUND_OFFSET - S.GROUND_CORNER_RADIUS, startAngle: 0, endAngle: Math.PI / 2, strokeWidth: S.GROUND_LINE_WID, radius: S.GROUND_CORNER_RADIUS, fill: null, stroke: '#fff' }, common)));\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET + S.GROUND_WIDTH - S.GROUND_CORNER_RADIUS, top: S.GROUND_OFFSET - S.GROUND_CORNER_RADIUS, startAngle: Math.PI / 2, endAngle: Math.PI, strokeWidth: S.GROUND_LINE_WID, radius: S.GROUND_CORNER_RADIUS, fill: null, stroke: '#fff' }, common)));\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET + S.GROUND_WIDTH - S.GROUND_CORNER_RADIUS, top: S.GROUND_OFFSET + S.GROUND_HEIGHT - S.GROUND_CORNER_RADIUS, startAngle: Math.PI, endAngle: Math.PI * 3 / 2, strokeWidth: S.GROUND_LINE_WID, radius: S.GROUND_CORNER_RADIUS, fill: null, stroke: '#fff' }, common)));\n        objs.push(new fabric.Circle(Object.assign({ left: S.GROUND_OFFSET - S.GROUND_CORNER_RADIUS, top: S.GROUND_OFFSET + S.GROUND_HEIGHT - S.GROUND_CORNER_RADIUS, startAngle: Math.PI * 3 / 2, endAngle: 0, strokeWidth: S.GROUND_LINE_WID, radius: S.GROUND_CORNER_RADIUS, fill: null, stroke: '#fff' }, common)));\n        return objs.map(o => fabricHelper_1.default.fabricObject2Obj(o));\n    }\n}\nexports.default = GroundManager;\n\n\n//# sourceURL=webpack:///./src/compo/groundManager.ts?");

/***/ }),

/***/ "./src/compo/index.tsx":
/*!*****************************!*\
  !*** ./src/compo/index.tsx ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author: zenggo\n * @Date: 2018-04-26 16:18:05\n * @Last Modified by: zenggo\n * @Last Modified time: 2018-05-07 13:45:56\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst styles = __webpack_require__(/*! ./style.less */ \"./src/compo/style.less\");\nconst React = __webpack_require__(/*! react */ \"react\");\nconst canvas2Img_1 = __webpack_require__(/*! ./lib/canvas2Img */ \"./src/compo/lib/canvas2Img.js\");\nconst data_1 = __webpack_require__(/*! ./data */ \"./src/compo/data.ts\");\nconst sizeManager_1 = __webpack_require__(/*! ./sizeManager */ \"./src/compo/sizeManager.ts\");\nconst groundManager_1 = __webpack_require__(/*! ./groundManager */ \"./src/compo/groundManager.ts\");\nconst stateManager_1 = __webpack_require__(/*! ./stateManager */ \"./src/compo/stateManager.ts\");\nconst fabricHelper_1 = __webpack_require__(/*! ./fabricHelper */ \"./src/compo/fabricHelper.ts\");\nconst image_1 = __webpack_require__(/*! ./element/image */ \"./src/compo/element/image.ts\");\nconst freeDraw_1 = __webpack_require__(/*! ./element/freeDraw */ \"./src/compo/element/freeDraw.ts\");\nconst freeLine_1 = __webpack_require__(/*! ./element/freeLine */ \"./src/compo/element/freeLine.ts\");\nconst text_1 = __webpack_require__(/*! ./element/text */ \"./src/compo/element/text.ts\");\nclass Tactical extends React.PureComponent {\n    constructor(p) {\n        super(p);\n        this.undo = () => {\n            if (!this.state.undoAble)\n                return;\n            let tInfo = this.stateManager.back();\n            this.createTactical(tInfo);\n            this.setState({\n                redoAble: this.stateManager.redoAble(),\n                undoAble: this.stateManager.undoAble()\n            });\n            if (this.state.mode !== data_1.Modes.freeDrawing) {\n                this.setState({ mode: data_1.Modes.normal });\n            }\n        };\n        this.redo = () => {\n            if (!this.state.redoAble)\n                return;\n            let tInfo = this.stateManager.forward();\n            this.createTactical(tInfo);\n            this.setState({\n                redoAble: this.stateManager.redoAble(),\n                undoAble: this.stateManager.undoAble()\n            });\n            if (this.state.mode !== data_1.Modes.freeDrawing) {\n                this.setState({ mode: data_1.Modes.normal });\n            }\n        };\n        this.onModified = options => {\n            console.log(options);\n            let { mode } = this.state;\n            if (mode == data_1.Modes.adjustFreeLine)\n                return;\n            this.updateState();\n        };\n        this.onSelect = options => {\n            let target = options.target;\n            switch (target._tType) {\n                case data_1.TType.freeDraw:\n                    this.onFreeDrawSelected(options);\n                    break;\n                case data_1.TType.image:\n                    this.onImageSelected(options);\n                    break;\n                case data_1.TType.freeLine:\n                    this.onFreeLineSelected(options);\n                    break;\n                case data_1.TType.text:\n                    this.onTextSelected(options);\n                    break;\n                default:\n                    target.type == 'activeSelection' && this.onGroupSelected(options);\n                    break;\n            }\n        };\n        this.onUnselect = () => {\n            if (this.state.mode !== data_1.Modes.adjustFreeLine) {\n                this.setState({ mode: data_1.Modes.normal });\n            }\n        };\n        this.onGroupSelected = options => {\n            let { selected, target } = options;\n            selected.forEach((obj) => {\n                if (obj._tType == data_1.TType.freeLine || obj._tType == data_1.TType.freeLineArrow) {\n                    target.removeWithUpdate(obj);\n                }\n            });\n            this.setState({ mode: data_1.Modes.groupSelected });\n        };\n        this.onFreeDrawSelected = options => {\n            this.setState({ mode: data_1.Modes.freeDrawSelected });\n        };\n        this.onImageSelected = options => {\n            this.setState({ mode: data_1.Modes.imageSelected });\n        };\n        this.onTextSelected = options => {\n            this.setState({ mode: data_1.Modes.textSelected });\n            let { target } = options;\n            target._tElement.startEdit();\n        };\n        this.onFreeLineSelected = options => {\n            let { target } = options;\n            target.set({ hasControls: false });\n            this.setState({\n                mode: data_1.Modes.freeLineSelected,\n                withLeftArrow: !!target._tHasLeftArrow,\n                withRightArrow: !!target._tHasRightArrow\n            });\n        };\n        this.onDropImgElement = options => {\n            if (this.state.mode !== data_1.Modes.imageAdding)\n                return;\n            this.setState({ mode: data_1.Modes.normal }, () => {\n                this.endAddImg(options);\n            });\n        };\n        // left menu handlers\n        this.onDragImgElementStart = e => {\n            let { mode } = this.state;\n            if ([data_1.Modes.normal, data_1.Modes.imageSelected, data_1.Modes.freeDrawSelected, data_1.Modes.freeLineSelected, data_1.Modes.groupSelected].indexOf(mode) < 0)\n                return;\n            this.startAddImg(e.nativeEvent);\n            this.setState({ mode: data_1.Modes.imageAdding });\n        };\n        this.onSwitchFreeDraw = () => {\n            fabricHelper_1.default.deselectAll(this.canvas);\n            if (this.state.mode === data_1.Modes.freeDrawing) {\n                this.setState({ mode: data_1.Modes.normal }, () => {\n                    this.endFreeDrawing();\n                });\n            }\n            else {\n                this.setState({ mode: data_1.Modes.freeDrawing }, () => {\n                    this.startFreeDrawing();\n                });\n            }\n        };\n        this.onSwitchFreeLine = () => {\n            fabricHelper_1.default.deselectAll(this.canvas);\n            if (this.state.mode === data_1.Modes.freeLining) {\n                this.setState({ mode: data_1.Modes.normal }, () => {\n                    this.endFreeLining();\n                });\n            }\n            else {\n                this.setState({ mode: data_1.Modes.freeLining }, () => {\n                    this.startFreeLining();\n                });\n            }\n        };\n        // toolbar handlers\n        this.onUp = () => {\n            fabricHelper_1.default.bringUpSelected(this.canvas);\n            this.updateState();\n        };\n        this.onDown = () => {\n            fabricHelper_1.default.sendBackwardSelected(this.canvas);\n            this.updateState();\n        };\n        this.onDel = () => {\n            fabricHelper_1.default.deleteSelected(this.canvas);\n            this.updateState();\n        };\n        this.onCopy = () => __awaiter(this, void 0, void 0, function* () {\n            let clone = yield fabricHelper_1.default.copySelected(this.canvas, this.state.sizes);\n            this.updateState();\n        });\n        this.onSave = () => {\n            let { mode } = this.state;\n            if (mode == data_1.Modes.imageAdding || mode == data_1.Modes.freeLining || mode == data_1.Modes.adjustFreeLine)\n                return;\n            let tInfo = this.stateManager.getNow();\n            localStorage.setItem('canvasData', JSON.stringify(tInfo));\n            alert('saved');\n        };\n        this.onExport = () => {\n            canvas2Img_1.default.saveAsPNG(document.getElementById('canvas'));\n        };\n        this.onOk = () => {\n            let { mode } = this.state;\n            if (mode === data_1.Modes.freeDrawing) {\n                this.onSwitchFreeDraw();\n            }\n            else if (mode === data_1.Modes.freeLining) {\n                this.onSwitchFreeLine();\n            }\n            else if (mode === data_1.Modes.adjustFreeLine) {\n                this.onSwitchFreeLineAdjust();\n            }\n        };\n        this.onSwitchFreeLineAdjust = () => {\n            if (this.state.mode === data_1.Modes.adjustFreeLine) {\n                this.setState({ mode: data_1.Modes.normal }, () => {\n                    this.endFreeLineAdjust();\n                });\n            }\n            else {\n                this.setState({ mode: data_1.Modes.adjustFreeLine }, () => {\n                    this.startFreeLineAdjust();\n                });\n            }\n        };\n        this.onSwitchLeftArrow = () => {\n            let { withLeftArrow } = this.state;\n            this.setState({ withLeftArrow: !withLeftArrow });\n            let target = this.canvas.getActiveObject();\n            if (withLeftArrow) {\n                target._tElement.removeLeftArrow();\n            }\n            else {\n                target._tElement.addLeftArrow();\n            }\n            this.updateState();\n        };\n        this.onSwitchRightArrow = () => {\n            let { withRightArrow } = this.state;\n            this.setState({ withRightArrow: !withRightArrow });\n            let target = this.canvas.getActiveObject();\n            if (withRightArrow) {\n                target._tElement.removeRightArrow();\n            }\n            else {\n                target._tElement.addRightArrow();\n            }\n            this.updateState();\n        };\n        // actions\n        this.startAddImg = e => {\n            this.tempHooker = new image_1.default(this.canvas, e);\n        };\n        this.endAddImg = options => {\n            let tempHooker = this.tempHooker;\n            if (tempHooker && tempHooker instanceof image_1.default) {\n                tempHooker.end(options, image => {\n                    this.canvas.setActiveObject(image.host);\n                    this.canvas.renderAll();\n                    this.updateState();\n                });\n                this.tempHooker = null;\n            }\n        };\n        this.startFreeLineAdjust = () => {\n            let selected = this.canvas.getActiveObject();\n            if (selected && selected._tType == data_1.TType.freeLine) {\n                fabricHelper_1.default.deselectAll(this.canvas);\n                this.setState({ mode: data_1.Modes.adjustFreeLine }); // 这里得写在discard后面，因为discard会触发selection:cleared的回调，mode 回到normal\n                let freeLine = selected._tElement;\n                freeLine.startAdjust();\n                this.tempHooker = freeLine;\n            }\n        };\n        this.endFreeLineAdjust = () => {\n            let tempHooker = this.tempHooker;\n            if (tempHooker && tempHooker instanceof freeLine_1.default) {\n                tempHooker.endAdjust();\n                this.tempHooker = null;\n                this.updateState();\n            }\n        };\n        this.startAddText = () => {\n            fabricHelper_1.default.deselectAll(this.canvas);\n            this.setState({ mode: data_1.Modes.addText }, () => {\n                this.tempHooker = new text_1.default(this.canvas, this.state.lineColor);\n            });\n        };\n        this.endAddText = () => {\n            let tempHooker = this.tempHooker;\n            if (tempHooker && tempHooker instanceof text_1.default) {\n                tempHooker.end();\n                this.tempHooker = null;\n            }\n        };\n        this.ImgElement = (props) => {\n            return React.createElement(\"div\", { style: { height: this.state.sizes.playerSize }, draggable: this.state.mode === data_1.Modes.normal, className: styles[\"player-element\"] },\n                React.createElement(\"img\", { src: props.src, onMouseDown: this.onDragImgElementStart }));\n        };\n        let sizes = sizeManager_1.default.getSize(p.width);\n        this.state = {\n            mode: data_1.Modes.normal,\n            sizes,\n            groundObjects: groundManager_1.default.getGroundObjects(sizes),\n            undoAble: false,\n            redoAble: false,\n            lineColor: data_1.Colors.black,\n            lineStyle: data_1.LineStyle.normal,\n            lineWidth: data_1.LineWidth.sm,\n            withLeftArrow: false,\n            withRightArrow: false\n        };\n    }\n    componentDidMount() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let data = localStorage.getItem('canvasData');\n            if (data) {\n                let formal = JSON.parse(data);\n                yield this.initCanvas(formal);\n            }\n            else {\n                yield this.initCanvas();\n            }\n            this.stateManager = new stateManager_1.default(this.canvas, this.props.width);\n        });\n    }\n    componentWillReceiveProps(nextp) {\n        if (nextp.width !== this.props.width) {\n            this.resize(nextp.width, this.props.width);\n        }\n    }\n    initCanvas(tInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.canvas && this.canvas.dispose(); // 删掉旧的canvas对象\n            this.canvas = fabricHelper_1.default.createCanvas(this.state.sizes);\n            yield this.createTactical(tInfo); // 渲染\n            // 更新stateManager\n            if (this.stateManager) {\n                this.stateManager.updateWrapWidth(this.props.width);\n                this.stateManager.updateCanvas(this.canvas);\n            }\n            this.bind(); // 绑定canvas事件\n            window['_canvas'] = this.canvas; // TODO:\n        });\n    }\n    createTactical(tInfo) {\n        let nowWrapWidth = this.props.width, objects;\n        if (tInfo) {\n            objects = (tInfo.wrapWidth == nowWrapWidth) ? tInfo.tObjects : sizeManager_1.default.scaleObjects(tInfo, nowWrapWidth);\n        }\n        let canvasData = fabricHelper_1.default.createFabricCanvasObject(this.state.groundObjects, objects);\n        return new Promise(resolve => {\n            // 重绘canvas\n            this.canvas.loadFromJSON(canvasData, () => {\n                // 给objects挂上tElement\n                tInfo && fabricHelper_1.default.recreateTElements(this.canvas._objects);\n                resolve();\n            });\n        });\n    }\n    resize(newWrapWidth, oldWrapWidth) {\n        let newSizes = sizeManager_1.default.getSize(newWrapWidth);\n        let newGroundObjects = groundManager_1.default.getGroundObjects(newSizes);\n        let tInfo = this.stateManager.getNow();\n        this.setState({\n            mode: data_1.Modes.normal,\n            sizes: newSizes,\n            groundObjects: newGroundObjects\n        }, () => {\n            this.initCanvas(tInfo); // 重新加载canvas\n        });\n    }\n    componentWillUpdate(nextp, nexts) {\n        let { mode } = this.state;\n        // 防止在以下三种状态时，未从各自结束按钮结束，就切换mode，导致未结束的问题\n        if (mode === data_1.Modes.freeDrawing && nexts.mode !== data_1.Modes.freeDrawing) {\n            this.canvas && this.endFreeDrawing();\n        }\n        if (mode === data_1.Modes.freeLining && nexts.mode !== data_1.Modes.freeLining) {\n            this.canvas && this.endFreeLining();\n        }\n        if (mode === data_1.Modes.adjustFreeLine && nexts.mode !== data_1.Modes.adjustFreeLine) {\n            this.canvas && this.endFreeLineAdjust();\n        }\n        if (mode === data_1.Modes.addText && nexts.mode !== data_1.Modes.addText) {\n            this.canvas && this.endAddText();\n        }\n    }\n    // state management\n    updateState() {\n        this.stateManager.update();\n        this.setState({\n            redoAble: this.stateManager.redoAble(),\n            undoAble: this.stateManager.undoAble()\n        });\n    }\n    // canvas binds and handlers\n    bind() {\n        let canvas = this.canvas;\n        canvas.on('drop', this.onDropImgElement);\n        canvas.on('selection:created', this.onSelect);\n        canvas.on('selection:updated', this.onSelect);\n        canvas.on('selection:cleared', this.onUnselect);\n        canvas.on('object:modified', this.onModified);\n    }\n    onChangeColor(color) {\n        let { mode, lineColor } = this.state;\n        let { canvas, tempHooker } = this;\n        if (mode === data_1.Modes.freeLining || mode === data_1.Modes.adjustFreeLine)\n            return false;\n        if (mode == data_1.Modes.freeDrawing) {\n            freeDraw_1.default.setColor(canvas, color);\n        }\n        else if (mode == data_1.Modes.freeDrawSelected) {\n            freeDraw_1.default.changeColor(canvas.getActiveObject(), color);\n            this.updateState();\n        }\n        else if (mode == data_1.Modes.addText) {\n            text_1.default.setColor(tempHooker, color);\n        }\n        else if (mode == data_1.Modes.textSelected) {\n            let text = canvas.getActiveObject();\n            text_1.default.changeColor(text, color);\n            text.text && this.updateState();\n        }\n        else if (mode == data_1.Modes.freeLineSelected) {\n            freeLine_1.default.changeColor(canvas.getActiveObject(), color);\n            this.updateState();\n        }\n        this.setState({ lineColor: color });\n    }\n    onChangeLineStyle(style) {\n        let { mode, lineStyle, lineWidth } = this.state;\n        let { canvas, tempHooker } = this;\n        if (mode === data_1.Modes.freeLining || mode === data_1.Modes.adjustFreeLine)\n            return;\n        if (mode == data_1.Modes.freeDrawing) {\n            freeDraw_1.default.setStyle(canvas, style, lineWidth);\n        }\n        else if (mode == data_1.Modes.freeDrawSelected) {\n            freeDraw_1.default.changeStyle(canvas.getActiveObject(), style, this.props.width);\n            this.updateState();\n        }\n        else if (mode == data_1.Modes.freeLineSelected) {\n            freeLine_1.default.changeStyle(canvas.getActiveObject(), style, this.props.width);\n            this.updateState();\n        }\n        this.setState({ lineStyle: style });\n    }\n    onChangeLineWidth(width) {\n        let { mode, lineWidth, lineStyle } = this.state;\n        let { canvas, tempHooker } = this;\n        if (mode === data_1.Modes.freeLining || mode === data_1.Modes.adjustFreeLine)\n            return;\n        if (mode == data_1.Modes.freeDrawing) {\n            freeDraw_1.default.setWidth(canvas, this.props.width, width, lineStyle);\n        }\n        else if (mode == data_1.Modes.freeDrawSelected) {\n            freeDraw_1.default.changeWidth(canvas.getActiveObject(), this.props.width, width);\n            this.updateState();\n        }\n        else if (mode == data_1.Modes.freeLineSelected) {\n            freeLine_1.default.changeWidth(canvas.getActiveObject(), this.props.width, width);\n            this.updateState();\n        }\n        this.setState({ lineWidth: width });\n    }\n    startFreeDrawing() {\n        let { lineColor, lineWidth, lineStyle } = this.state;\n        freeDraw_1.default.start(this.canvas, this.props.width, lineColor, lineWidth, lineStyle);\n        this.canvas._onFreeDrawAdded = this.updateState.bind(this);\n    }\n    endFreeDrawing() {\n        freeDraw_1.default.end(this.canvas);\n        this.canvas._onFreeDrawAdded = null;\n    }\n    startFreeLining() {\n        let { lineColor, lineStyle, lineWidth } = this.state;\n        this.tempHooker = new freeLine_1.default(this.canvas, this.props.width, lineColor, lineStyle, lineWidth);\n    }\n    endFreeLining() {\n        let tempHooker = this.tempHooker;\n        if (tempHooker && tempHooker instanceof freeLine_1.default) {\n            tempHooker.end();\n            this.tempHooker = null;\n            this.updateState();\n        }\n    }\n    // view\n    render() {\n        let { sizes: S, mode, lineColor, lineStyle, lineWidth, withLeftArrow, withRightArrow, redoAble, undoAble } = this.state;\n        return React.createElement(\"div\", { style: { display: 'flex' } },\n            React.createElement(\"div\", { className: styles[\"panel\"], style: {\n                    width: S.panelWidth,\n                    height: S.panelHeight\n                } },\n                React.createElement(\"div\", { className: styles['draw-block'] },\n                    React.createElement(\"div\", { className: styles['line-color-block'] },\n                        React.createElement(\"div\", { onClick: this.onChangeColor.bind(this, data_1.Colors.black), className: lineColor == data_1.Colors.black ? styles['selected'] : '', style: { background: data_1.Colors.black } }),\n                        React.createElement(\"div\", { onClick: this.onChangeColor.bind(this, data_1.Colors.red), className: lineColor == data_1.Colors.red ? styles['selected'] : '', style: { background: data_1.Colors.red } }),\n                        React.createElement(\"div\", { onClick: this.onChangeColor.bind(this, data_1.Colors.yellow), className: lineColor == data_1.Colors.yellow ? styles['selected'] : '', style: { background: data_1.Colors.yellow } }),\n                        React.createElement(\"div\", { onClick: this.onChangeColor.bind(this, data_1.Colors.blue), className: lineColor == data_1.Colors.blue ? styles['selected'] : '', style: { background: data_1.Colors.blue } })),\n                    React.createElement(\"div\", { className: styles['line-style-block'] },\n                        React.createElement(\"div\", { onClick: this.onChangeLineStyle.bind(this, data_1.LineStyle.normal), className: `${styles['line-style-btn']} ${lineStyle == data_1.LineStyle.normal ? styles['selected'] : ''}` },\n                            React.createElement(\"div\", { className: styles['line-normal'] })),\n                        React.createElement(\"div\", { onClick: this.onChangeLineStyle.bind(this, data_1.LineStyle.dash), className: `${styles['line-style-btn']} ${lineStyle == data_1.LineStyle.dash ? styles['selected'] : ''}` },\n                            React.createElement(\"div\", { className: styles['line-dash'] }))),\n                    React.createElement(\"div\", { className: styles['line-width-block'] },\n                        React.createElement(\"div\", { onClick: this.onChangeLineWidth.bind(this, data_1.LineWidth.sm), className: styles['line-width-btn'] },\n                            React.createElement(\"div\", { className: lineWidth == data_1.LineWidth.sm ? styles['selected'] : '', style: { width: 10, height: 10 } })),\n                        React.createElement(\"div\", { onClick: this.onChangeLineWidth.bind(this, data_1.LineWidth.md), className: styles['line-width-btn'] },\n                            React.createElement(\"div\", { className: lineWidth == data_1.LineWidth.md ? styles['selected'] : '', style: { width: 15, height: 15 } })),\n                        React.createElement(\"div\", { onClick: this.onChangeLineWidth.bind(this, data_1.LineWidth.lg), className: styles['line-width-btn'] },\n                            React.createElement(\"div\", { className: lineWidth == data_1.LineWidth.lg ? styles['selected'] : '', style: { width: 20, height: 20 } }))),\n                    React.createElement(\"div\", { onClick: this.onSwitchFreeDraw, className: `${styles[\"draw-btn\"]} ${mode === data_1.Modes.freeDrawing ? styles['checked'] : ''}` }, \"Free Draw\"),\n                    React.createElement(\"div\", { onClick: this.onSwitchFreeLine, className: `${styles[\"draw-btn\"]} ${mode === data_1.Modes.freeLining ? styles['checked'] : ''}` }, \"Free Line\"),\n                    React.createElement(\"div\", { onClick: this.startAddText, className: `${styles[\"draw-btn\"]} ${mode === data_1.Modes.addText ? styles['checked'] : ''}` }, \"Text\")),\n                React.createElement(\"div\", { className: styles[\"ele-block\"] },\n                    React.createElement(this.ImgElement, { src: \"./imgs/red1.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/red2.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/red3.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/red4.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/red5.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/red6.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/yellow1.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/yellow2.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/yellow3.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/yellow4.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/yellow5.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/yellow6.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/blue1.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/blue2.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/blue3.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/blue4.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/blue5.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/blue6.png\" })),\n                React.createElement(\"div\", { className: styles[\"ele-block\"] },\n                    React.createElement(this.ImgElement, { src: \"./imgs/football.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/medicine_ball.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/opponent.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/obstacle.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/goal1.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/goal2.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/goal3.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/flag.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/coordination_ladder2.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/cone_red_big.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/cone_blue_big.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/cone_yellow_big.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/cone_grey_big.png\" }),\n                    React.createElement(this.ImgElement, { src: \"./imgs/cross.png\" }))),\n            React.createElement(\"div\", { style: { position: 'relative' } },\n                React.createElement(\"canvas\", { width: S.canvasWidth, height: S.canvasHeight, id: \"canvas\" }),\n                React.createElement(\"div\", { className: styles[\"tool-bar\"] },\n                    React.createElement(\"div\", { className: styles[\"tool-box-left\"] },\n                        this.renderLeftToolBox(),\n                        mode == data_1.Modes.freeLineSelected ?\n                            [React.createElement(\"div\", { onClick: this.onSwitchLeftArrow, key: \"lt\", className: `${styles['tool-item']} ${withLeftArrow ? styles['arrow-active'] : ''}` }, \"<\"),\n                                React.createElement(\"div\", { onClick: this.onSwitchRightArrow, key: \"gt\", className: `${styles['tool-item']} ${withRightArrow ? styles['arrow-active'] : ''}` }, \">\")]\n                            : null),\n                    React.createElement(\"div\", { className: styles[\"tool-box-right\"] },\n                        React.createElement(\"div\", { className: `${styles[\"tool-item\"]} ${undoAble ? '' : styles['disabled']}`, style: { color: \"#419adf\" }, onClick: this.undo }, \"\\u25C0\"),\n                        React.createElement(\"div\", { className: `${styles[\"tool-item\"]} ${redoAble ? '' : styles['disabled']}`, style: { color: \"#419adf\" }, onClick: this.redo }, \"\\u25B6\"),\n                        React.createElement(\"div\", { className: styles[\"tool-item\"], style: { color: \"#419adf\" }, onClick: this.onSave }, \"Save\"),\n                        React.createElement(\"div\", { className: styles[\"tool-item\"], style: { color: \"#59a94e\" }, onClick: this.onExport }, \"Img\"))),\n                (mode === data_1.Modes.freeDrawing || mode === data_1.Modes.freeLining || mode === data_1.Modes.adjustFreeLine) ?\n                    React.createElement(\"div\", { onClick: this.onOk, className: styles['ok-btn'] }, \"\\u2714\")\n                    : null));\n    }\n    renderLeftToolBox() {\n        let mode = this.state.mode;\n        const upper = React.createElement(\"div\", { key: \"upper\", className: styles[\"tool-item\"], onClick: this.onUp }, \"\\u2191\");\n        const downer = React.createElement(\"div\", { key: \"downer\", className: styles[\"tool-item\"], onClick: this.onDown }, \"\\u2193\");\n        const deleter = React.createElement(\"div\", { key: \"deleter\", className: styles[\"tool-item\"], onClick: this.onDel, style: { color: \"red\" } }, \"\\u00D7\");\n        const copyer = React.createElement(\"div\", { key: \"copyer\", className: styles[\"tool-item\"], onClick: this.onCopy, style: { color: \"#419adf\" } }, \"||\");\n        const freeLineEditor = React.createElement(\"div\", { key: \"freeLineEditor\", className: styles[\"tool-item\"], onClick: this.onSwitchFreeLineAdjust }, \"\\u270E\");\n        switch (mode) {\n            case data_1.Modes.freeDrawSelected:\n            case data_1.Modes.imageSelected: return [upper, downer, deleter, copyer];\n            case data_1.Modes.freeLineSelected: return [upper, downer, deleter, freeLineEditor];\n            case data_1.Modes.groupSelected: return [upper, downer, deleter, copyer];\n            case data_1.Modes.textSelected: return [upper, downer, deleter, copyer];\n            default: return null;\n        }\n    }\n}\nexports.default = Tactical;\n\n\n//# sourceURL=webpack:///./src/compo/index.tsx?");

/***/ }),

/***/ "./src/compo/lib/canvas2Img.js":
/*!*************************************!*\
  !*** ./src/compo/lib/canvas2Img.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * covert canvas to image\n * and save the image file\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Canvas2Image = function () {\n    // check if support sth.\n    var $support = function () {\n        var canvas = document.createElement('canvas'), ctx = canvas.getContext('2d');\n        return {\n            canvas: !!ctx,\n            imageData: !!ctx.getImageData,\n            dataURL: !!canvas.toDataURL,\n            btoa: !!window.btoa\n        };\n    }();\n    var downloadMime = 'image/octet-stream';\n    function scaleCanvas(canvas, width, height) {\n        var w = canvas.width, h = canvas.height;\n        if (width == undefined) {\n            width = w;\n        }\n        if (height == undefined) {\n            height = h;\n        }\n        var retCanvas = document.createElement('canvas');\n        var retCtx = retCanvas.getContext('2d');\n        retCanvas.width = width;\n        retCanvas.height = height;\n        retCtx.drawImage(canvas, 0, 0, w, h, 0, 0, width, height);\n        return retCanvas;\n    }\n    function getDataURL(canvas, type, width, height) {\n        canvas = scaleCanvas(canvas, width, height);\n        return canvas.toDataURL(type);\n    }\n    function saveFile(strData) {\n        document.location.href = strData;\n    }\n    function genImage(strData) {\n        var img = document.createElement('img');\n        img.src = strData;\n        return img;\n    }\n    function fixType(type) {\n        type = type.toLowerCase().replace(/jpg/i, 'jpeg');\n        var r = type.match(/png|jpeg|bmp|gif/)[0];\n        return 'image/' + r;\n    }\n    function encodeData(data) {\n        if (!window.btoa) {\n            throw 'btoa undefined';\n        }\n        var str = '';\n        if (typeof data == 'string') {\n            str = data;\n        }\n        else {\n            for (var i = 0; i < data.length; i++) {\n                str += String.fromCharCode(data[i]);\n            }\n        }\n        return btoa(str);\n    }\n    function getImageData(canvas) {\n        var w = canvas.width, h = canvas.height;\n        return canvas.getContext('2d').getImageData(0, 0, w, h);\n    }\n    function makeURI(strData, type) {\n        return 'data:' + type + ';base64,' + strData;\n    }\n    /**\n     * create bitmap image\n     * 按照规则生成图片响应头和响应体\n     */\n    var genBitmapImage = function (oData) {\n        //\n        // BITMAPFILEHEADER: http://msdn.microsoft.com/en-us/library/windows/desktop/dd183374(v=vs.85).aspx\n        // BITMAPINFOHEADER: http://msdn.microsoft.com/en-us/library/dd183376.aspx\n        //\n        var biWidth = oData.width;\n        var biHeight = oData.height;\n        var biSizeImage = biWidth * biHeight * 3;\n        var bfSize = biSizeImage + 54; // total header size = 54 bytes\n        //\n        //  typedef struct tagBITMAPFILEHEADER {\n        //  \tWORD bfType;\n        //  \tDWORD bfSize;\n        //  \tWORD bfReserved1;\n        //  \tWORD bfReserved2;\n        //  \tDWORD bfOffBits;\n        //  } BITMAPFILEHEADER;\n        //\n        var BITMAPFILEHEADER = [\n            // WORD bfType -- The file type signature; must be \"BM\"\n            0x42, 0x4D,\n            // DWORD bfSize -- The size, in bytes, of the bitmap file\n            bfSize & 0xff, bfSize >> 8 & 0xff, bfSize >> 16 & 0xff, bfSize >> 24 & 0xff,\n            // WORD bfReserved1 -- Reserved; must be zero\n            0, 0,\n            // WORD bfReserved2 -- Reserved; must be zero\n            0, 0,\n            // DWORD bfOffBits -- The offset, in bytes, from the beginning of the BITMAPFILEHEADER structure to the bitmap bits.\n            54, 0, 0, 0\n        ];\n        //\n        //  typedef struct tagBITMAPINFOHEADER {\n        //  \tDWORD biSize;\n        //  \tLONG  biWidth;\n        //  \tLONG  biHeight;\n        //  \tWORD  biPlanes;\n        //  \tWORD  biBitCount;\n        //  \tDWORD biCompression;\n        //  \tDWORD biSizeImage;\n        //  \tLONG  biXPelsPerMeter;\n        //  \tLONG  biYPelsPerMeter;\n        //  \tDWORD biClrUsed;\n        //  \tDWORD biClrImportant;\n        //  } BITMAPINFOHEADER, *PBITMAPINFOHEADER;\n        //\n        var BITMAPINFOHEADER = [\n            // DWORD biSize -- The number of bytes required by the structure\n            40, 0, 0, 0,\n            // LONG biWidth -- The width of the bitmap, in pixels\n            biWidth & 0xff, biWidth >> 8 & 0xff, biWidth >> 16 & 0xff, biWidth >> 24 & 0xff,\n            // LONG biHeight -- The height of the bitmap, in pixels\n            biHeight & 0xff, biHeight >> 8 & 0xff, biHeight >> 16 & 0xff, biHeight >> 24 & 0xff,\n            // WORD biPlanes -- The number of planes for the target device. This value must be set to 1\n            1, 0,\n            // WORD biBitCount -- The number of bits-per-pixel, 24 bits-per-pixel -- the bitmap\n            // has a maximum of 2^24 colors (16777216, Truecolor)\n            24, 0,\n            // DWORD biCompression -- The type of compression, BI_RGB (code 0) -- uncompressed\n            0, 0, 0, 0,\n            // DWORD biSizeImage -- The size, in bytes, of the image. This may be set to zero for BI_RGB bitmaps\n            biSizeImage & 0xff, biSizeImage >> 8 & 0xff, biSizeImage >> 16 & 0xff, biSizeImage >> 24 & 0xff,\n            // LONG biXPelsPerMeter, unused\n            0, 0, 0, 0,\n            // LONG biYPelsPerMeter, unused\n            0, 0, 0, 0,\n            // DWORD biClrUsed, the number of color indexes of palette, unused\n            0, 0, 0, 0,\n            // DWORD biClrImportant, unused\n            0, 0, 0, 0\n        ];\n        var iPadding = (4 - ((biWidth * 3) % 4)) % 4;\n        var aImgData = oData.data;\n        var strPixelData = '';\n        var biWidth4 = biWidth << 2;\n        var y = biHeight;\n        var fromCharCode = String.fromCharCode;\n        do {\n            var iOffsetY = biWidth4 * (y - 1);\n            var strPixelRow = '';\n            for (var x = 0; x < biWidth; x++) {\n                var iOffsetX = x << 2;\n                strPixelRow += fromCharCode(aImgData[iOffsetY + iOffsetX + 2]) +\n                    fromCharCode(aImgData[iOffsetY + iOffsetX + 1]) +\n                    fromCharCode(aImgData[iOffsetY + iOffsetX]);\n            }\n            for (var c = 0; c < iPadding; c++) {\n                strPixelRow += String.fromCharCode(0);\n            }\n            strPixelData += strPixelRow;\n        } while (--y);\n        var strEncoded = encodeData(BITMAPFILEHEADER.concat(BITMAPINFOHEADER)) + encodeData(strPixelData);\n        return strEncoded;\n    };\n    /**\n     * saveAsImage\n     * @param canvasElement\n     * @param {String} image type\n     * @param {Number} [optional] png width\n     * @param {Number} [optional] png height\n     */\n    var saveAsImage = function (canvas, width, height, type) {\n        if ($support.canvas && $support.dataURL) {\n            if (typeof canvas == \"string\") {\n                canvas = document.getElementById(canvas);\n            }\n            if (type == undefined) {\n                type = 'png';\n            }\n            type = fixType(type);\n            if (/bmp/.test(type)) {\n                var data = getImageData(scaleCanvas(canvas, width, height));\n                var strData = genBitmapImage(data);\n                saveFile(makeURI(strData, downloadMime));\n            }\n            else {\n                var strData = getDataURL(canvas, type, width, height);\n                saveFile(strData.replace(type, downloadMime));\n            }\n        }\n    };\n    var convertToImage = function (canvas, width, height, type) {\n        if ($support.canvas && $support.dataURL) {\n            if (typeof canvas == \"string\") {\n                canvas = document.getElementById(canvas);\n            }\n            if (type == undefined) {\n                type = 'png';\n            }\n            type = fixType(type);\n            if (/bmp/.test(type)) {\n                var data = getImageData(scaleCanvas(canvas, width, height));\n                var strData = genBitmapImage(data);\n                return genImage(makeURI(strData, 'image/bmp'));\n            }\n            else {\n                var strData = getDataURL(canvas, type, width, height);\n                return genImage(strData);\n            }\n        }\n    };\n    return {\n        saveAsImage: saveAsImage,\n        saveAsPNG: function (canvas, width, height) {\n            return saveAsImage(canvas, width, height, 'png');\n        },\n        saveAsJPEG: function (canvas, width, height) {\n            return saveAsImage(canvas, width, height, 'jpeg');\n        },\n        saveAsGIF: function (canvas, width, height) {\n            return saveAsImage(canvas, width, height, 'gif');\n        },\n        saveAsBMP: function (canvas, width, height) {\n            return saveAsImage(canvas, width, height, 'bmp');\n        },\n        convertToImage: convertToImage,\n        convertToPNG: function (canvas, width, height) {\n            return convertToImage(canvas, width, height, 'png');\n        },\n        convertToJPEG: function (canvas, width, height) {\n            return convertToImage(canvas, width, height, 'jpeg');\n        },\n        convertToGIF: function (canvas, width, height) {\n            return convertToImage(canvas, width, height, 'gif');\n        },\n        convertToBMP: function (canvas, width, height) {\n            return convertToImage(canvas, width, height, 'bmp');\n        }\n    };\n}();\nexports.default = Canvas2Image;\n\n\n//# sourceURL=webpack:///./src/compo/lib/canvas2Img.js?");

/***/ }),

/***/ "./src/compo/sizeManager.ts":
/*!**********************************!*\
  !*** ./src/compo/sizeManager.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author: zenggo\n * @Date: 2018-04-23 15:44:29\n * @Last Modified by: zenggo\n * @Last Modified time: 2018-05-02 17:12:58\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst data_1 = __webpack_require__(/*! ./data */ \"./src/compo/data.ts\");\nconst DEFAULT_WRAP_WIDTH = 1500;\nconst S = {\n    SELECTION_LINE_WIDTH: 0.2,\n    // 球场\n    GROUND_WIDTH: 110,\n    GROUND_HEIGHT: 68,\n    GROUND_OFFSET: 5,\n    GROUND_LINE_WID: 0.3,\n    GROUND_CEN_RADIUS: 9.15,\n    GROUND_CEN_DOT_RADIUS: 0.8,\n    GROUND_BIG_BOX_WID: 16.5,\n    GROUND_BIG_BOX_HEI: 40.3,\n    GROUND_SM_BOX_WID: 5.5,\n    GROUND_SM_BOX_HEI: 15.1,\n    GROUND_PENALTY_LEN: 11,\n    GROUND_PENALTY_RADIUS: 0.5,\n    GROUND_BOX_ARC_RADIUS: 9.15,\n    GROUND_CORNER_RADIUS: 2,\n    GROUND_GOAL_WID: 2,\n    GROUND_GOAL_HEI: 7.3,\n    // canvas\n    COPY_OFFSET: 1\n};\nclass SizeManager {\n    static getSize(WRAPWIDTH) {\n        const SCALE = WRAPWIDTH / DEFAULT_WRAP_WIDTH * 10;\n        let sizes = {};\n        sizes.WRAPWIDTH = WRAPWIDTH;\n        for (let key in S) {\n            sizes[key] = Math.ceil(S[key] * SCALE);\n        }\n        // 球场画布\n        sizes.canvasWidth = sizes.GROUND_WIDTH + 2 * sizes.GROUND_OFFSET;\n        sizes.canvasHeight = sizes.GROUND_HEIGHT + 2 * sizes.GROUND_OFFSET;\n        // 底部功能条\n        const toolBarHeight = 30;\n        // 左侧面板\n        sizes.panelWidth = WRAPWIDTH - sizes.canvasWidth;\n        sizes.panelHeight = sizes.GROUND_HEIGHT + 2 * sizes.GROUND_OFFSET;\n        // 球员图标\n        sizes.playerSize = WRAPWIDTH / DEFAULT_WRAP_WIDTH * 50;\n        return sizes;\n    }\n    // 按之前保存的wrap宽度与现在的宽度缩放\n    static scaleObjects(formalInfo, newWrapWidth) {\n        let { wrapWidth, tObjects } = formalInfo;\n        let scale = newWrapWidth / wrapWidth;\n        return tObjects.map(obj => {\n            return Object.assign({}, obj, {\n                left: Math.ceil(obj.left * scale),\n                top: Math.ceil(obj.top * scale),\n                scaleX: obj.scaleX * scale,\n                scaleY: obj.scaleY * scale\n            });\n        });\n    }\n    // 获取笔刷大小\n    static getRealLineWidth(width, wrapWidth) {\n        return wrapWidth / DEFAULT_WRAP_WIDTH * width;\n    }\n    static getLineWidth(width, wrapWidth) {\n        let w = width * DEFAULT_WRAP_WIDTH / wrapWidth;\n        let offset = [data_1.LineWidth.lg - w, data_1.LineWidth.md - w, data_1.LineWidth.sm - w];\n        offset = offset.map(o => Math.abs(o));\n        let idx = offset.indexOf(Math.min(...offset));\n        if (idx == 0)\n            return data_1.LineWidth.lg;\n        if (idx == 1)\n            return data_1.LineWidth.md;\n        if (idx == 2)\n            return data_1.LineWidth.sm;\n    }\n    static getStrokeDashArray(lineWidth) {\n        if (lineWidth == data_1.LineWidth.sm)\n            return [5, 5];\n        if (lineWidth == data_1.LineWidth.md)\n            return [15, 15];\n        if (lineWidth == data_1.LineWidth.lg)\n            return [25, 25];\n    }\n}\nexports.default = SizeManager;\n\n\n//# sourceURL=webpack:///./src/compo/sizeManager.ts?");

/***/ }),

/***/ "./src/compo/stateManager.ts":
/*!***********************************!*\
  !*** ./src/compo/stateManager.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @author: zenggo\n * @Date: 2018-04-28 15:59:31\n * @Last Modified by: zenggo\n * @Last Modified time: 2018-05-02 16:32:15\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fabricHelper_1 = __webpack_require__(/*! ./fabricHelper */ \"./src/compo/fabricHelper.ts\");\nconst MAXDEPTH = 50;\nclass StateManager {\n    constructor(canvas, wrapWidth) {\n        this.canvas = canvas;\n        this.wrapWidth = wrapWidth;\n        this.states = [fabricHelper_1.default.createTInfo(canvas, wrapWidth)];\n        this.cursor = 0;\n        window['_state'] = this; // TODO:\n    }\n    updateCanvas(newCanvas) {\n        this.canvas = newCanvas;\n    }\n    updateWrapWidth(newWidth) {\n        this.wrapWidth = newWidth;\n    }\n    undoAble() {\n        return this.cursor > 0;\n    }\n    redoAble() {\n        return this.cursor < (this.states.length - 1);\n    }\n    back() {\n        if (this.undoAble()) {\n            this.cursor--;\n            return this.states[this.cursor];\n        }\n    }\n    forward() {\n        if (this.redoAble()) {\n            this.cursor++;\n            return this.states[this.cursor];\n        }\n    }\n    update() {\n        let newTInfo = fabricHelper_1.default.createTInfo(this.canvas, this.wrapWidth);\n        if (this.cursor === (this.states.length - 1)) {\n            this.states.push(newTInfo);\n        }\n        else {\n            this.states = [...this.states.slice(0, this.cursor + 1), newTInfo];\n        }\n        let len = this.states.length;\n        if (len > MAXDEPTH) {\n            this.states = this.states.slice(len - MAXDEPTH, MAXDEPTH);\n        }\n        this.cursor = this.states.length - 1;\n        return newTInfo;\n    }\n    getNow() {\n        return this.states[this.cursor];\n    }\n}\nexports.default = StateManager;\n\n\n//# sourceURL=webpack:///./src/compo/stateManager.ts?");

/***/ }),

/***/ "./src/compo/style.less":
/*!******************************!*\
  !*** ./src/compo/style.less ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader?modules&localIdentName=[name]__[local]-[hash:base64:5]!../../node_modules/less-loader/dist/cjs.js!./style.less */ \"./node_modules/css-loader/index.js?modules&localIdentName=[name]__[local]-[hash:base64:5]!./node_modules/less-loader/dist/cjs.js!./src/compo/style.less\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./src/compo/style.less?");

/***/ }),

/***/ "./src/index.tsx":
/*!***********************!*\
  !*** ./src/index.tsx ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst ReactDOM = __webpack_require__(/*! react-dom */ \"react-dom\");\nconst index_1 = __webpack_require__(/*! ./compo/index */ \"./src/compo/index.tsx\");\nclass Main extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            width: 1200\n        };\n    }\n    render() {\n        return React.createElement(\"div\", { style: {\n                width: this.state.width,\n                margin: '0 auto'\n            } },\n            React.createElement(\"div\", { style: { textAlign: 'center', marginBottom: 20 } },\n                React.createElement(\"button\", { style: { width: 50 }, onClick: () => this.setState({ width: this.state.width + 100 }) }, \"+\"),\n                React.createElement(\"button\", { style: { width: 50 }, onClick: () => this.setState({ width: this.state.width - 100 }) }, \"-\")),\n            React.createElement(index_1.default, { width: this.state.width }));\n    }\n}\nReactDOM.render(React.createElement(Main, null), document.getElementById('main'));\n\n\n//# sourceURL=webpack:///./src/index.tsx?");

/***/ }),

/***/ "fabric":
/*!*************************!*\
  !*** external "fabric" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = fabric;\n\n//# sourceURL=webpack:///external_%22fabric%22?");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "React" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = React;\n\n//# sourceURL=webpack:///external_%22React%22?");

/***/ }),

/***/ "react-dom":
/*!***************************!*\
  !*** external "ReactDOM" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = ReactDOM;\n\n//# sourceURL=webpack:///external_%22ReactDOM%22?");

/***/ })

/******/ });